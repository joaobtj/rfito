[{"path":"index.html","id":"análises-estatísticas-com-o-r-experimentos-aplicados-à-fitopatologia","chapter":"Capítulo 1 Análises estatísticas com o R: Experimentos aplicados à Fitopatologia","heading":"Capítulo 1 Análises estatísticas com o R: Experimentos aplicados à Fitopatologia","text":"Este curso é voltado para análises estatísticas de experimentos na área de Fitopatologia.Serão descrita algumas das análises mais comuns dos experimentos executados Laboratório de Fitopatologia Campus de Curitibanos da Universidade Federal de Santa Catarina.","code":""},{"path":"index.html","id":"equipe","chapter":"Capítulo 1 Análises estatísticas com o R: Experimentos aplicados à Fitopatologia","heading":"1.1 Equipe","text":"Profa. Dra. Adriana Terumi ItakoProf. Dr. João Batista Tolentino Júnior","code":""},{"path":"index.html","id":"projeto-do-rsudio-cloud","chapter":"Capítulo 1 Análises estatísticas com o R: Experimentos aplicados à Fitopatologia","heading":"1.2 Projeto do RSudio Cloud","text":"Acesse o link https://rstudio.cloud/content/4435631","code":""},{"path":"aaccm.html","id":"aaccm","chapter":"Capítulo 2 Área Abaixo da Curva de Crescimento Micelial - AACCM","heading":"Capítulo 2 Área Abaixo da Curva de Crescimento Micelial - AACCM","text":"É um conceito da epidemiologia que analisa o crescimento da doença em função tempo.É feita pela quantificação da área uma gráfico que expressa evolução da quantidade de doença (eixo x) em função tempo (eixo y).caso crescimento micelial, observado em placas de Petri, quantidade de doença é medida pelo diâmetro ou raio da colônia.Na figura abaixo é mostrado um exemplo de uma curva de progresso da doença.\nFigura 2.1: Exemplo de uma curva de progresso da doença.\nárea abaixo da curva pode ser calculada pelo método dos trapézios, cuja fórmula é seguinte:\\[\nAAC = \\frac{1}{2} \\sum ((X_{+1}+X_i) \\cdot (T_{+1}-T_i))\n\\]software R, existe função audpc pacote phytopathologyr que efetua este cálculoA função precisa de dois vetores:Tempo em que cada medida foi realizada (exemplo abaixo, dias após repicagem da colônia).Quantificação da doença (exemplo abaixo, o diâmetro da colônia em cada tempo.)","code":"\ntempo <- c(0, 1, 2, 3, 5, 6, 7, 8)\ndiam <- c(0.5, 0.6, 0.7, 1.2, 3.1, 5.2, 6.6, 8.8)\nlibrary(phytopathologyr)\naudpc(y = diam, time = tempo)## [1] 24.2"},{"path":"aaccm.html","id":"aaccmexp","chapter":"Capítulo 2 Área Abaixo da Curva de Crescimento Micelial - AACCM","heading":"2.1 Como utilizar a AACCM na análise de experimentos","text":"AACCM é um valor único que integra evolução da curva de progresso da doença em todo o tempo de avaliação.curvas de progressos só podem ser comparadas entre si quando tem exatamente o mesmo tempo de duração, isto é, o tempo de avaliação deve ser exatamente igual.Em experimentos comparativos, devemos calcular AACCM para cada repetição de cada tratamento, afim de prossegurimos com análises estatísticas posteriormente.O primeiro passo é digitar os seus dados em um formato organizado e passível de leitura pelo software R. Vou exemplificar digitação em uma planilha Excel, pois é o formato amplamente utilizado em nosso laboratório.planilha Excel deve ser organizada da seguinte forma:\nFigura 2.2: Exemplo de planilha Excel\nÉ recomendável utilizar primeiras linhas para fazer uam descrição dos dados apresentadas (metadados). Utilize quantas linhas desejar, pois estas serão ignoradas momento da importação da planilha para o R. Neste exemplo, 6 primeiras linhas são auxiliares, e os dados propriamente ditos começam na linha 7.primeiras colunas devem conter os tratamentos ou fatores e repetições.colunas seguintes seguem um padrão: primeira medida diâmetro (), segunda medida diâmetro (B) e média destas duas medidas. Esta última recebe cabeçalho o momento em que foi efetuada medição, seja data, data e hora, depender planejamento seu experimento.Com planilha Excel devidamente preenchida e todos os valores conferidos, podemos seguir com importação desta para o ambiente R.Uma planilha de exemplo está aqui para download.Para isso, utilizamos função read_excel pacote readxlNa sequência, devemos “limpar” colunas que não precisamos com funções dos pacotes dplyr e tidyr. Este passo é bastante variável em função da forma como os dados foram organizados/digitados anteriormente. Vou exemplificar conforme planilha Excel mostrada na figura 2.2.Após estas instruções, é possível calcular AACCM para cada repetição de cada tratamento, com função audpc pacote phytopathologyr da seguinte forma:Por fim, o resultado destes cálculos pode ser salvo para utilização nas análises posteriores. O formato .csv é idela para salvar, visto que sua importação pelo R é facilmente executado e pode ser aberto em qualquer computador para leitura.","code":"## New names:\n## • `x` -> `x...4`\n## • `x` -> `x...6`\n## • `x` -> `x...8`\n## • `x` -> `x...10`\n## • `x` -> `x...12`\n## • `x` -> `x...14`\n## • `x` -> `x...16`\ndados_aaccm <- readxl::read_excel(\"data/pareamento.xlsx\", skip = 6)## New names:\n## • `x` -> `x...4`\n## • `x` -> `x...6`\n## • `x` -> `x...8`\n## • `x` -> `x...10`\n## • `x` -> `x...12`\n## • `x` -> `x...14`\n## • `x` -> `x...16`## Rows: 50\n## Columns: 16\n## $ trat                 <chr> \"TEST\", \"TEST\", \"TEST\", \"TEST\", \"TEST\", \"111B\", \"…\n## $ rep                  <dbl> 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2…\n## $ `44585.888888888891` <dbl> 0.6, 0.6, 0.5, 0.5, 0.5, 0.8, 0.7, 0.7, 0.6, 0.6,…\n## $ x...4                <dbl> NA, NA, NA, NA, NA, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4,…\n## $ `44586.361111111109` <dbl> 1.5, 1.6, 1.5, 1.4, 1.4, 1.5, 1.5, 1.5, 1.4, 1.2,…\n## $ x...6                <dbl> NA, NA, NA, NA, NA, 0.4, 0.0, 0.0, 0.0, 0.0, 0.7,…\n## $ `44586.769444444442` <dbl> 2.2, 2.4, 2.2, 2.1, 2.1, 2.4, 2.3, 2.2, 2.2, 2.3,…\n## $ x...8                <dbl> NA, NA, NA, NA, NA, 0.5, 0.4, 0.4, 0.3, 0.4, 1.1,…\n## $ `44587.343055555553` <dbl> 3.7, 3.9, 3.7, 3.6, 3.6, 4.0, 3.9, 3.7, 3.7, 3.8,…\n## $ x...10               <dbl> NA, NA, NA, NA, NA, 0.8, 0.7, 0.7, 0.6, 0.6, 1.8,…\n## $ `44587.77847222222`  <dbl> 5.1, 5.3, 5.1, 4.9, 4.9, 4.8, 4.7, 4.9, 4.6, 5.0,…\n## $ x...12               <dbl> NA, NA, NA, NA, NA, 1.0, 1.0, 0.9, 0.8, 0.8, 2.0,…\n## $ `44588.3125`         <dbl> 7.0, 7.0, 7.0, 6.8, 6.8, 5.0, 5.0, 5.9, 5.1, 5.5,…\n## $ x...14               <dbl> NA, NA, NA, NA, NA, 1.3, 1.1, 1.1, 0.9, 1.0, 2.1,…\n## $ `44588.674305555556` <dbl> 7.5, 7.5, 7.5, 7.4, 7.3, 4.9, 5.0, 5.6, 4.8, 5.5,…\n## $ x...16               <dbl> NA, NA, NA, NA, NA, 1.3, 1.3, 1.1, 1.0, 1.0, 2.2,…\nlibrary(dplyr)\nlibrary(tidyr)\n\ndados_aaccm <- dados_aaccm %>%\n  select(!starts_with(\"x\")) %>%\n  pivot_longer(3:length(.), names_to = \"tempo\", values_to = \"diametro\") %>%\n  mutate(tempo = as.numeric(tempo) - as.numeric(tempo[1]))## Rows: 350\n## Columns: 4\n## $ trat     <chr> \"TEST\", \"TEST\", \"TEST\", \"TEST\", \"TEST\", \"TEST\", \"TEST\", \"TEST…\n## $ rep      <dbl> 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3…\n## $ tempo    <dbl> 0.0000000, 0.4722222, 0.8805556, 1.4541667, 1.8895833, 2.4236…\n## $ diametro <dbl> 0.6, 1.5, 2.2, 3.7, 5.1, 7.0, 7.5, 0.6, 1.6, 2.4, 3.9, 5.3, 7…\nlibrary(phytopathologyr)\ndados_aaccm <- dados_aaccm %>%\n  group_by(trat, rep) %>%\n  summarise(aaccm = audpc(diametro, tempo)) %>%\n  ungroup()## `summarise()` has grouped output by 'trat'. You can override using the\n## `.groups` argument.## Rows: 50\n## Columns: 3\n## $ trat  <chr> \"102B\", \"102B\", \"102B\", \"102B\", \"102B\", \"111B\", \"111B\", \"111B\", …\n## $ rep   <dbl> 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2…\n## $ aaccm <dbl> 9.997049, 10.212813, 9.636563, 10.291319, 10.246111, 9.498368, 9…\nreadr::write_csv2(dados_aaccm, \"data/aaccm.csv\")"},{"path":"ivcm.html","id":"ivcm","chapter":"Capítulo 3 Índice de Velocidade do Crescimento Micelial - IVCM","heading":"Capítulo 3 Índice de Velocidade do Crescimento Micelial - IVCM","text":"Complementar AACCM, avalia velocidade média crescimento micelial. Pode ser utilizado quando curvas de progresso tem duração diferentes.Retomando o exemplo da Figura 2.1, o IVCM é calculado pela seguinte fórmula:\\[\nIVCM =  \\sum ((X_{+1}-X_i) \\cdot (T_{+1}-T_i))\n\\]software R, existe função mvi pacote phytopathologyr que efetua este cálculoA função precisa de dois vetores:Tempo em que cada medida foi realizada (exemplo abaixo, dias após repicagem da colônia).Quantificação da doença (exemplo abaixo, o diâmetro da colônia em cada tempo.)","code":"\ntempo <- c(0, 1, 2, 3, 5, 6, 7, 8)\ndiam <- c(0.5, 0.6, 0.7, 1.2, 3.1, 5.2, 6.6, 8.8)\nlibrary(phytopathologyr)\nmvi(y = diam, time = tempo)## [1] 1.05"},{"path":"ivcm.html","id":"como-utilizar-o-ivcm-na-análise-de-experimentos","chapter":"Capítulo 3 Índice de Velocidade do Crescimento Micelial - IVCM","heading":"3.1 Como utilizar o IVCM na análise de experimentos","text":"O IVCM segue mesma lógica utilizada cálculo da AACCM. Para mais detalhes, consulte o item 2.1.O cálculo IVCM para cada repetição de cada tratamento é feito com função mvi pacote phytopathologyr:Por fim, o resultado destes cálculos pode ser salvo para utilização nas análises posteriores. O formato .csv é idela para salvar, visto que sua importação pelo R é facilmente executado e pode ser aberto em qualquer computador para leitura.","code":"\nlibrary(phytopathologyr)\ndados_ivcm <- dados_ivcm %>%\n  group_by(trat, rep) %>%\n  summarise(ivcm = mvi(diametro, tempo)) %>%\n  ungroup()## `summarise()` has grouped output by 'trat'. You can override using the\n## `.groups` argument.## Rows: 50\n## Columns: 3\n## $ trat <chr> \"102B\", \"102B\", \"102B\", \"102B\", \"102B\", \"111B\", \"111B\", \"111B\", \"…\n## $ rep  <dbl> 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2,…\n## $ ivcm <dbl> 1.6756552, 1.6783320, 1.6114918, 1.8541976, 1.6912924, 1.4018704,…\nreadr::write_csv2(dados_ivcm, \"data/ivcm.csv\")"},{"path":"análise-de-variância.html","id":"análise-de-variância","chapter":"Capítulo 4 Análise de Variância","heading":"Capítulo 4 Análise de Variância","text":"Veja o material publica em biostat.tolentino.pro.brAnálise de Variância para 1 fatorAnálise de Variância para 2 fatores","code":""},{"path":"análise-de-variância.html","id":"script-para-análise-de-variância","chapter":"Capítulo 4 Análise de Variância","heading":"4.1 Script para Análise de Variância","text":"Download para ANOVA de 1 fator","code":""},{"path":"surv.html","id":"surv","chapter":"Capítulo 5 Análise de sobrevivência","heading":"Capítulo 5 Análise de sobrevivência","text":"Na análise de sobrevivência variável dependente é o tempo até ocorrência de determinado evento. Compara-se rapidez com que ocorreu determinado evento, ao contrário de comparar percentagens de ocorrência deste evento ao final de determinado tempo.É técnica ideal para analisar respostas binárias (ter ou não ter um evento) em estudos temporais.momento da análise, podem haver indivíduos censurados, isto é, que não desenvolveram o evento até o fim tempo de observação estudo (independentemente motivo).","code":""},{"path":"surv.html","id":"curva-de-sobrevivência-de-kaplan-meier","chapter":"Capítulo 5 Análise de sobrevivência","heading":"5.1 Curva de sobrevivência de Kaplan-Meier","text":"curvas apresentam uma forma de “escada”. eixo vertical está porcentagem de sobrevivência, ou seja, probabilidade de não ocorrer o evento.","code":""},{"path":"surv.html","id":"exemplo-de-uma-análise-de-sobrevivência","chapter":"Capítulo 5 Análise de sobrevivência","heading":"5.2 Exemplo de uma Análise de Sobrevivência","text":"Considere os dados presentes na planilha surv.xlsx.Os dados representam germinação de escleródios de S. rolfsii submetidos tratamentos com óleo essencial de Cravo 5000 ppm em diferentes tempos (30, 90 e 180 minutos).organização da planilha deve ser feita rigorosamente desta forma:1ª coluna: nome dos tratamentos;2ª coluna: número das repetições;3ª coluna: número de indivíduos em cada repetição;4ª coluna em diante: número de indivíduos que apresentaram o evento estudado com o nome das colunas representando o tempo;Última coluna: números de indivíduos censurados.Caso esta organização seja seguida rigorosamente, podemos utilizar função surv_data (download aqui) para preparar os dados para análise de sobrevivência.Iniciamos então análise com o pacote survival:Comparação pareada (pairwise) entre duas curvas de sobrevivência utilizando o teste G-rho (logrank test).exemplo abaixo, testou-se diferença entre os tratamentos TETS090 e CR090.E curvas de sobrevivência podem ser plotadas com o pacote ggplot2, utilizando geometria geom_step.","code":"\nsource(\"script/surv_data.R\")\nsobrev <- readxl::read_excel(\"data/surv.xlsx\", skip = 2) %>% surv_data()\nlibrary(survival)\nan_sobrev <- survfit(Surv(time, status) ~ trat, data = sobrev)\nan_sobrev## Call: survfit(formula = Surv(time, status) ~ trat, data = sobrev)\n## \n##               n events median 0.95LCL 0.95UCL\n## trat=CR030   48     47    7.5       7       9\n## trat=CR090   48     45    7.0       6       7\n## trat=CR180   48      0     NA      NA      NA\n## trat=TEST030 48     48    3.0       2       4\n## trat=TEST090 48     48    3.0       2       4\n## trat=TEST180 48     48    3.0       3       4\nsummary(an_sobrev, censored = TRUE)## Call: survfit(formula = Surv(time, status) ~ trat, data = sobrev)\n## \n##                 trat=CR030 \n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n##     3     48       2   0.9583  0.0288        0.903        1.000\n##     4     46       6   0.8333  0.0538        0.734        0.946\n##     5     40       3   0.7708  0.0607        0.661        0.899\n##     7     37      13   0.5000  0.0722        0.377        0.663\n##     8     24       7   0.3542  0.0690        0.242        0.519\n##     9     17       6   0.2292  0.0607        0.136        0.385\n##    10     11       1   0.2083  0.0586        0.120        0.362\n##    12     10       9   0.0208  0.0206        0.003        0.145\n## \n##                 trat=CR090 \n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n##     3     48       3   0.9375  0.0349       0.8715        1.000\n##     4     45       2   0.8958  0.0441       0.8135        0.987\n##     5     43       8   0.7292  0.0641       0.6137        0.866\n##     6     35       6   0.6042  0.0706       0.4805        0.760\n##     7     29      14   0.3125  0.0669       0.2054        0.475\n##     8     15       6   0.1875  0.0563       0.1041        0.338\n##     9      9       5   0.0833  0.0399       0.0326        0.213\n##    12      4       1   0.0625  0.0349       0.0209        0.187\n## \n##                 trat=CR180 \n##         time       n.risk      n.event     survival      std.err lower 95% CI \n##           12           48            0            1            0            1 \n## upper 95% CI \n##            1 \n## \n##                 trat=TEST030 \n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n##     2     48      23   0.5208  0.0721       0.3971        0.683\n##     3     25       8   0.3542  0.0690       0.2417        0.519\n##     4     17      12   0.1042  0.0441       0.0454        0.239\n##     5      5       4   0.0208  0.0206       0.0030        0.145\n##     6      1       1   0.0000     NaN           NA           NA\n## \n##                 trat=TEST090 \n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n##     2     48      19   0.6042  0.0706       0.4805        0.760\n##     3     29       9   0.4167  0.0712       0.2981        0.582\n##     4     20      11   0.1875  0.0563       0.1041        0.338\n##     5      9       7   0.0417  0.0288       0.0107        0.162\n##     6      2       2   0.0000     NaN           NA           NA\n## \n##                 trat=TEST180 \n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n##     2     48      11   0.7708  0.0607       0.6606        0.899\n##     3     37      18   0.3958  0.0706       0.2791        0.561\n##     4     19       8   0.2292  0.0607       0.1364        0.385\n##     5     11       8   0.0625  0.0349       0.0209        0.187\n##     6      3       3   0.0000     NaN           NA           NA\nsobrev %>%\n  filter(trat == \"TEST090\" | trat == \"CR090\") %>%\n  survdiff(Surv(time, status) ~ trat, data = .)## Call:\n## survdiff(formula = Surv(time, status) ~ trat, data = .)\n## \n##               N Observed Expected (O-E)^2/E (O-E)^2/V\n## trat=CR090   48       45       72      10.1      69.9\n## trat=TEST090 48       48       21      34.5      69.9\n## \n##  Chisq= 69.9  on 1 degrees of freedom, p= <2e-16\ng_surv <- data.frame(\n  trat = summary(an_sobrev, c = T)$strata,\n  time = summary(an_sobrev, c = T)$time,\n  surv = summary(an_sobrev, c = T)$surv\n)\n\n\nlibrary(ggplot2)\ng_surv %>%\n  filter(trat == \"trat=CR090\") %>%\n  ggplot(aes(x = time, y = surv)) +\n  geom_step()"}]
